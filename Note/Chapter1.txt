《UNIX/LINUX编程实践教程》――第1章 Unix系统编程概述笔记

本书首先分析操作系统的职责入手，来解释如何编写与操作系统紧密相关的程序。然后通过夫人年西标准的Unix命令，以及它们用到的系统调用，进一步指导读者自己编程实现相应的功能。

计算机用操作系统来管理所有的资源，并将不同的设备和不同的程序连接起来。

在进行系统编程时，必须对系统的结构和工作方式有更深的了解，要知道内核提供哪些服务（系统调用），如何使用它们，系统有那些资源和设备，不同的资源和设备如何操作。

系统资源：处理器、输入输出（I/O）、进程管理、内存、设备、计时器、进程间通信、网络等。

学习方法：

通过三个步骤来理解：分析程序->学习系统调用->编程实现。
通过三个问题来实现：它能做什么？ 它是如何实现的？ 能不能自己编写一个？
目录树：文件和目录被组织成树状结构，Unix提供相应的命令来对目录进行操作。

文件系统的最顶端是「/」（根目录），根目录一般都包含几个子目录，且都有它们特定的用途。

目录操作命令：

ls――列出目录内容。
cd――改变当前目录。
pwd――显示当前目录。
mdkdir、rmdir――新建、删除目录。
文件命名规则：在Unix系统中，文件名最长可以是250个字符，不能包含根目录符号「/」。

文件操作命令：

cat，more，less，pg――查看文件的内容。
cp――文件复制。
rm――文件删除。
mv――重命名或移动文件。
lpr，lp――打印文件。
文件许可权限：每个文件都有文件所有者（owner）和文件许可权限。

文件许可分为3组：r（read）、w（write）、x（execute）。

用户也被分成三组：user（文件所有者）、group（与文件所有者同组的用户）、other（其他用户）。

通过命令ls -l filename 可以查看文件文件许可权限。

Unix系统编程中3个重要的方面：

通信。某个用户或进程如何与其他用户或进程交换信息？
协作。程序如果来协调多个进程使他们能够没有冲突地访问共享资源？
网络访问。计算机中的程序是如何来使用网络的呢？
Unix的计算器：bc并不做任何计算，bc是dc的预处理器，它将用户输入的表达式转换成逆波兰表达式，通过管道（pipe）交给dc，dc计算表达式的值，将结果返回给bc，bc再将结果以合适的形式显示在显示器上。

通过自己动手编写more程序，理解标准输入输出、管道重定向、「/dev/tty」以及本书解决问题的步骤。

Unix系统的主要结构：内存被分为系统空间和用户空间，内核和它的数据结构位于系统空间，用户程序位于用户空间。用户通过终端连接到系统，文件存放在磁盘上，各种各样的设备被内核直接管理，用户程序可以通过内核来访问设备，最后还有网络连接，用户可以通过网络接入系统。

小结：

计算机系统中包含了很多系统资源，如硬盘、内存、外围设备、网络连接等，程序利用这些资源来对数据进行存储、转换和处理。
多用户系统需要一个中央管理程序，Unix的内核就是这样的程序，它可以对程序资源进行管理。
用户程序要访问设备必须经过内核。
一些Unix的系统功能是由多个程序的协作而实现的。
要编写系统程序，必须对系统调用和相关的数据结构有深入的理解。
2014-06-17